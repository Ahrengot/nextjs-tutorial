{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/ahrengot/Documents/work/experiments/nextjs/tutorial/pages/shows/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport PageLayout from \"../../components/PageLayout\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst MovieItem = ({\n  show\n}) => __jsx(\"article\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, __jsx(\"img\", {\n  src: show.image.medium,\n  alt: show.name,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}), __jsx(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, show.name), __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, show.summary));\n\nconst ShowSearchPage = () => {\n  const {\n    0: didSearch,\n    1: setDidSearch\n  } = useState(false);\n  const {\n    0: results,\n    1: setResults\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: query,\n    1: setQuery\n  } = useState(\"\");\n\n  const search = async e => {\n    e.preventDefault();\n\n    if (isLoading || !query) {\n      return;\n    }\n\n    setResults([]);\n    setLoading(true);\n    setDidSearch(false);\n    const res = await fetch(`https://api.tvmaze.com/search/shows?q=${encodeURIComponent(query)}`);\n    const data = await res.json();\n    setLoading(false);\n    setResults(data);\n    setDidSearch(true);\n  };\n\n  return __jsx(PageLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Search for movies\"), __jsx(\"form\", {\n    onSubmit: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"fieldset\", {\n    disabled: isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"search\",\n    className: \"form-control\",\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))), didSearch && results.length === 0 && __jsx(\"p\", {\n    className: \"mt-3 text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"No results :(\"), results && __jsx(\"ul\", {\n    className: \"list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, results.map(movie => __jsx(\"li\", {\n    key: movie.show.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/movie/[id]\",\n    as: `/movie/${movie.show.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(MovieItem, _extends({}, movie, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))))))));\n};\n\nexport default ShowSearchPage;","map":{"version":3,"sources":["/Users/ahrengot/Documents/work/experiments/nextjs/tutorial/pages/shows/index.tsx"],"names":["useState","Link","PageLayout","fetch","MovieItem","show","image","medium","name","summary","ShowSearchPage","didSearch","setDidSearch","results","setResults","isLoading","setLoading","query","setQuery","search","e","preventDefault","res","encodeURIComponent","data","json","target","value","length","map","movie","id"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Link from \"next/link\";\nimport PageLayout from \"../../components/PageLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport { Movie } from \"../../types/movie\";\n\nconst MovieItem = ({show}:Movie) => (\n  <article>\n    <img src={show.image.medium} alt={show.name} />\n    <h3>{show.name}</h3>\n    <div>{show.summary}</div>\n  </article>\n)\n\nconst ShowSearchPage = () => {\n  const [didSearch, setDidSearch] = useState(false);\n  const [results, setResults] = useState<Movie[]>([]);\n  const [isLoading, setLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n\n  const search = async (e:React.FormEvent) => {\n    e.preventDefault();\n\n    if (isLoading || !query) {\n      return;\n    }\n    \n    setResults([]);\n    setLoading(true);\n    setDidSearch(false);\n    \n    const res = await fetch(`https://api.tvmaze.com/search/shows?q=${encodeURIComponent(query)}`);\n    const data = await res.json();\n    \n\n    setLoading(false);\n    setResults(data);\n    setDidSearch(true);\n  }\n\n  return (\n    <PageLayout>\n      <h1>Search for movies</h1>\n      <form onSubmit={search}>\n        <fieldset disabled={isLoading}>\n          <input type=\"search\" className=\"form-control\" value={query} onChange={e => setQuery(e.target.value)} required />\n        </fieldset>\n      </form>\n      {didSearch && results.length === 0 && (\n        <p className=\"mt-3 text-danger\">No results :(</p>\n      )}\n      {results && (\n        <ul className=\"list-unstyled\">\n          {results.map(movie => (\n            <li key={movie.show.id}>\n              <Link href=\"/movie/[id]\" as={`/movie/${movie.show.id}`}>\n                <a>\n                  <MovieItem {...movie} />\n                </a>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </PageLayout>\n  )\n}\n\nexport default ShowSearchPage;"]},"metadata":{},"sourceType":"module"}