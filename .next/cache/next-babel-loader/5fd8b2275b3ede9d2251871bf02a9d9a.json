{"ast":null,"code":"var _jsxFileName = \"/Users/ahrengot/Documents/work/experiments/nextjs/tutorial/pages/shows/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport PageLayout from \"../../components/PageLayout\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst SingleShowPage = props => {\n  if (!props.show) {\n    return __jsx(PageLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Nothing found for ID \\\"\", props.showId, \"\\\"\"), __jsx(Link, {\n      href: \"/shows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"\\u2190 back to search\")));\n  }\n\n  const show = props.show;\n  console.log(\"Props: \", props);\n  return __jsx(PageLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"show.name\"), __jsx(Link, {\n    href: \"/shows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"\\u2190 back to search\")));\n};\n\nSingleShowPage.getInitialProps = async req => {\n  console.log(\"Req: \", req);\n  const res = await fetch(`https://api.tvmaze.com/shows/401`);\n  const data = await res.json();\n  return {\n    show: data,\n    showId: \"Test\"\n  };\n};\n\nexport default SingleShowPage;","map":{"version":3,"sources":["/Users/ahrengot/Documents/work/experiments/nextjs/tutorial/pages/shows/[id].tsx"],"names":["Link","PageLayout","fetch","SingleShowPage","props","show","showId","console","log","getInitialProps","req","res","data","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AASA,MAAMC,cAAc,GAAIC,KAAD,IAAiB;AACtC,MAAI,CAACA,KAAK,CAACC,IAAX,EAAiB;AACf,WACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA2BD,KAAK,CAACE,MAAjC,OADF,EAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAApB,CAFF,CADF;AAMD;;AAED,QAAMD,IAAI,GAAGD,KAAK,CAACC,IAAnB;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB;AAEA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CAFF,CADF;AAQD,CAtBD;;AAwBAD,cAAc,CAACM,eAAf,GAAiC,MAAOC,GAAP,IAA8B;AAC7DH,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,GAArB;AACA,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAAE,kCAAF,CAAvB;AACA,QAAMU,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEA,SAAO;AACLR,IAAAA,IAAI,EAAEO,IADD;AAELN,IAAAA,MAAM,EAAE;AAFH,GAAP;AAID,CATD;;AAWA,eAAeH,cAAf","sourcesContent":["import Link from \"next/link\";\nimport PageLayout from \"../../components/PageLayout\";\nimport fetch from \"isomorphic-unfetch\";\n\nimport { Show } from \"../../types/show\";\n\ntype Props = {\n  show? : Show;\n  showId: string,\n}\n\nconst SingleShowPage = (props:Props) => {\n  if (!props.show) {\n    return (\n      <PageLayout>\n        <h1>Nothing found for ID \"{props.showId}\"</h1>\n        <Link href=\"/shows\"><a>&larr; back to search</a></Link>\n      </PageLayout>\n    )\n  }\n\n  const show = props.show;\n\n  console.log(\"Props: \", props);\n\n  return (\n    <PageLayout>\n      <h1>show.name</h1>\n      <Link href=\"/shows\">\n        <a>&larr; back to search</a>\n      </Link>\n    </PageLayout>\n  );\n};\n\nSingleShowPage.getInitialProps = async (req):Promise<Props> => {\n  console.log(\"Req: \", req);\n  const res = await fetch(`https://api.tvmaze.com/shows/401`);\n  const data = await res.json();\n\n  return {\n    show: data,\n    showId: \"Test\"\n  }\n}\n\nexport default SingleShowPage;\n"]},"metadata":{},"sourceType":"module"}