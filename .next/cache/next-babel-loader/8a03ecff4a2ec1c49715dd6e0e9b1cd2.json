{"ast":null,"code":"var _jsxFileName = \"/Users/ahrengot/Documents/work/experiments/nextjs/tutorial/components/Header.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport classNames from \"classnames\";\nconst headerStyle = {\n  marginTop: \"2vmin\",\n  marginBottom: \"6vmin\"\n};\nconst linkStyle = {\n  marginRight: 15\n};\nconst routes = [{\n  url: \"/\",\n  name: \"Home\"\n}, {\n  url: \"/about\",\n  name: \"About\"\n}, {\n  url: \"/shows\",\n  name: \"TV Shows\"\n}];\n\nconst Header = () => {\n  const router = useRouter();\n\n  const isCurrentUrl = url => {\n    return router.asPath === url;\n  };\n\n  return __jsx(\"header\", {\n    style: headerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"nav\", {\n    className: \"navbar navbar-expand navbar-light bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: \"navbar-nav mr-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, routes.map(r => __jsx(\"li\", {\n    className: \"nav-item\",\n    key: r.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: r.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: classNames(\"nav-link\", {\n      active: isCurrentUrl(r.url)\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, r.name)))))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/ahrengot/Documents/work/experiments/nextjs/tutorial/components/Header.tsx"],"names":["Link","useRouter","classNames","headerStyle","marginTop","marginBottom","linkStyle","marginRight","routes","url","name","Header","router","isCurrentUrl","asPath","map","r","active"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,SAAS,EAAE,OADO;AAElBC,EAAAA,YAAY,EAAE;AAFI,CAApB;AAKA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE;AADG,CAAlB;AASA,MAAMC,MAAc,GAAG,CACrB;AAAEC,EAAAA,GAAG,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CADqB,EAErB;AAAED,EAAAA,GAAG,EAAE,QAAP;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAFqB,EAGrB;AAAED,EAAAA,GAAG,EAAE,QAAP;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAHqB,CAAvB;;AAMA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,MAAM,GAAGX,SAAS,EAAxB;;AAEA,QAAMY,YAAY,GAAIJ,GAAD,IAAwB;AAC3C,WAAOG,MAAM,CAACE,MAAP,KAAkBL,GAAzB;AACD,GAFD;;AAIA,SACE;AAAQ,IAAA,KAAK,EAAEN,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,MAAM,CAACO,GAAP,CAAWC,CAAC,IACX;AAAI,IAAA,SAAS,EAAC,UAAd;AAAyB,IAAA,GAAG,EAAEA,CAAC,CAACP,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEO,CAAC,CAACP,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEP,UAAU,CAAC,UAAD,EAAa;AAACe,MAAAA,MAAM,EAAEJ,YAAY,CAACG,CAAC,CAACP,GAAH;AAArB,KAAb,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsEO,CAAC,CAACN,IAAxE,CADF,CADF,CADD,CADH,CADF,CADF,CADF;AAeD,CAtBD;;AAwBA,eAAeC,MAAf","sourcesContent":["import Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport classNames from \"classnames\";\n\nconst headerStyle = {\n  marginTop: \"2vmin\",\n  marginBottom: \"6vmin\"\n}\n\nconst linkStyle = {\n  marginRight: 15\n}\n\ntype Route = {\n  url: string,\n  name: string,\n}\n\nconst routes:Route[] = [\n  { url: \"/\", name: \"Home\" },\n  { url: \"/about\", name: \"About\" },\n  { url: \"/shows\", name: \"TV Shows\" },\n]\n\nconst Header = () => {\n  const router = useRouter();\n\n  const isCurrentUrl = (url:string):boolean => {\n    return router.asPath === url;\n  }\n\n  return (\n    <header style={headerStyle}>\n      <nav className=\"navbar navbar-expand navbar-light bg-light\">\n        <ul className=\"navbar-nav mr-auto\">\n          {routes.map(r => (\n            <li className=\"nav-item\" key={r.url}>\n              <Link href={r.url}>\n                <a className={classNames(\"nav-link\", {active: isCurrentUrl(r.url)})}>{r.name}</a>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}