{"ast":null,"code":"var _jsxFileName = \"/Users/ahrengot/Documents/work/experiments/nextjs/tutorial/pages/shows/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport PageLayout from \"../../components/PageLayout\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst SingleShowPage = ({\n  show,\n  showId\n}) => {\n  if (!show) {\n    return __jsx(PageLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Nothing found for ID \\\"\", showId, \"\\\"\"), __jsx(Link, {\n      href: \"/shows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"\\u2190 back to search\")));\n  }\n\n  return __jsx(PageLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, show.name), show.image && show.image.original && __jsx(\"img\", {\n    src: show.image.original,\n    alt: show.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"my-3 bg-light rounded py-3 px-4 shadow\",\n    dangerouslySetInnerHTML: {\n      __html: show.summary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(Link, {\n    href: \"/shows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"\\u2190 back to search\")));\n};\n\nSingleShowPage.getInitialProps = async ({\n  query\n}) => {\n  const res = await fetch(`https://api.tvmaze.com/shows/${query.id}`);\n  const data = await res.json();\n  return {\n    show: data,\n    showId: query.id\n  };\n};\n\nexport default SingleShowPage;","map":{"version":3,"sources":["/Users/ahrengot/Documents/work/experiments/nextjs/tutorial/pages/shows/[id].tsx"],"names":["Link","PageLayout","fetch","SingleShowPage","show","showId","name","image","original","__html","summary","getInitialProps","query","res","id","data","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AASA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAA0B;AAC/C,MAAI,CAACD,IAAL,EAAW;AACT,WACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA2BC,MAA3B,OADF,EAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAApB,CAFF,CADF;AAMD;;AAED,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,IAAV,CADF,EAEGF,IAAI,CAACG,KAAL,IAAcH,IAAI,CAACG,KAAL,CAAWC,QAAzB,IACC;AAAK,IAAA,GAAG,EAAEJ,IAAI,CAACG,KAAL,CAAWC,QAArB;AAA+B,IAAA,GAAG,EAAEJ,IAAI,CAACE,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAKE;AACE,IAAA,SAAS,EAAC,wCADZ;AAEE,IAAA,uBAAuB,EAAE;AAACG,MAAAA,MAAM,EAAEL,IAAI,CAACM;AAAd,KAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EASE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CATF,CADF;AAeD,CAzBD;;AA2BAP,cAAc,CAACQ,eAAf,GAAiC,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAkC;AACjE,QAAMC,GAAG,GAAG,MAAMX,KAAK,CAAE,gCAA+BU,KAAK,CAACE,EAAG,EAA1C,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,SAAO;AACLZ,IAAAA,IAAI,EAAEW,IADD;AAELV,IAAAA,MAAM,EAAEO,KAAK,CAACE;AAFT,GAAP;AAID,CARD;;AAUA,eAAeX,cAAf","sourcesContent":["import Link from \"next/link\";\nimport PageLayout from \"../../components/PageLayout\";\nimport fetch from \"isomorphic-unfetch\";\n\nimport { ShowData } from \"../../types/show\";\n\ntype Props = {\n  show? : ShowData;\n  showId: string,\n}\n\nconst SingleShowPage = ({show, showId}:Props) => {\n  if (!show) {\n    return (\n      <PageLayout>\n        <h1>Nothing found for ID \"{showId}\"</h1>\n        <Link href=\"/shows\"><a>&larr; back to search</a></Link>\n      </PageLayout>\n    )\n  }\n\n  return (\n    <PageLayout>\n      <h1>{show.name}</h1>\n      {show.image && show.image.original && (\n        <img src={show.image.original} alt={show.name}/>\n      )}\n      <div\n        className=\"my-3 bg-light rounded py-3 px-4 shadow\"\n        dangerouslySetInnerHTML={{__html: show.summary}}\n      />\n      <Link href=\"/shows\">\n        <a>&larr; back to search</a>\n      </Link>\n    </PageLayout>\n  );\n};\n\nSingleShowPage.getInitialProps = async ({query}):Promise<Props> => {\n  const res = await fetch(`https://api.tvmaze.com/shows/${query.id}`);\n  const data = await res.json();\n\n  return {\n    show: data,\n    showId: query.id\n  }\n}\n\nexport default SingleShowPage;\n"]},"metadata":{},"sourceType":"module"}