{"ast":null,"code":"var _jsxFileName = \"/Users/ahrengot/Documents/work/experiments/nextjs/tutorial/pages/shows/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport PageLayout from \"../../components/PageLayout\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst SingleShowPage = ({\n  show,\n  showId\n}) => {\n  if (!show) {\n    return __jsx(PageLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Nothing found for ID \\\"\", showId, \"\\\"\"), __jsx(Link, {\n      href: \"/shows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"\\u2190 back to search\")));\n  }\n\n  console.log(\"Show\", show);\n  return __jsx(PageLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, show.name), show.image && show.image.original && __jsx(\"img\", {\n    src: show.image.original,\n    alt: show.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), __jsx(\"section\", {\n    className: \"my-3 bg-light rounded py-3 px-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"dl\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"dt\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Date\"), __jsx(\"dd\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(\"dt\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Summary\"), __jsx(\"dd\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: show.summary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(Link, {\n    href: \"/shows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\u2190 back to search\")));\n};\n\nSingleShowPage.getInitialProps = async ({\n  query\n}) => {\n  const res = await fetch(`https://api.tvmaze.com/shows/${query.id}`);\n  const data = await res.json();\n  return {\n    show: data,\n    showId: query.id\n  };\n};\n\nexport default SingleShowPage;","map":{"version":3,"sources":["/Users/ahrengot/Documents/work/experiments/nextjs/tutorial/pages/shows/[id].tsx"],"names":["Link","PageLayout","fetch","SingleShowPage","show","showId","console","log","name","image","original","__html","summary","getInitialProps","query","res","id","data","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AASA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAA0B;AAC/C,MAAI,CAACD,IAAL,EAAW;AACT,WACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA2BC,MAA3B,OADF,EAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAApB,CAFF,CADF;AAMD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;AAEA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACI,IAAV,CADF,EAEGJ,IAAI,CAACK,KAAL,IAAcL,IAAI,CAACK,KAAL,CAAWC,QAAzB,IAAqC;AAAK,IAAA,GAAG,EAAEN,IAAI,CAACK,KAAL,CAAWC,QAArB;AAA+B,IAAA,GAAG,EAAEN,IAAI,CAACI,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFxC,EAGE;AAAS,IAAA,SAAS,EAAC,iCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CAHF,EAWE;AAAK,IAAA,uBAAuB,EAAE;AAAEG,MAAAA,MAAM,EAAEP,IAAI,CAACQ;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CAZF,CADF;AAkBD,CA9BD;;AAgCAT,cAAc,CAACU,eAAf,GAAiC,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAkC;AACjE,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAAE,gCAA+BY,KAAK,CAACE,EAAG,EAA1C,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,SAAO;AACLd,IAAAA,IAAI,EAAEa,IADD;AAELZ,IAAAA,MAAM,EAAES,KAAK,CAACE;AAFT,GAAP;AAID,CARD;;AAUA,eAAeb,cAAf","sourcesContent":["import Link from \"next/link\";\nimport PageLayout from \"../../components/PageLayout\";\nimport fetch from \"isomorphic-unfetch\";\n\nimport { ShowData } from \"../../types/show\";\n\ntype Props = {\n  show? : ShowData;\n  showId: string,\n}\n\nconst SingleShowPage = ({show, showId}:Props) => {\n  if (!show) {\n    return (\n      <PageLayout>\n        <h1>Nothing found for ID \"{showId}\"</h1>\n        <Link href=\"/shows\"><a>&larr; back to search</a></Link>\n      </PageLayout>\n    )\n  }\n\n  console.log(\"Show\", show);\n\n  return (\n    <PageLayout>\n      <h1>{show.name}</h1>\n      {show.image && show.image.original && <img src={show.image.original} alt={show.name} />}\n      <section className=\"my-3 bg-light rounded py-3 px-4\">\n        <dl>\n          <dt>Date</dt>\n          <dd>{}</dd>\n          <dt>Summary</dt>\n          <dd></dd>\n        </dl>\n      </section>\n      <div dangerouslySetInnerHTML={{ __html: show.summary }} />\n      <Link href=\"/shows\">\n        <a>&larr; back to search</a>\n      </Link>\n    </PageLayout>\n  );\n};\n\nSingleShowPage.getInitialProps = async ({query}):Promise<Props> => {\n  const res = await fetch(`https://api.tvmaze.com/shows/${query.id}`);\n  const data = await res.json();\n\n  return {\n    show: data,\n    showId: query.id\n  }\n}\n\nexport default SingleShowPage;\n"]},"metadata":{},"sourceType":"module"}